#!/bin/sh

# 判断是否是安全连接
if [ "${PROXY_SCHEME}" == "https" ] || [ "${PROXY_SCHEME}" == "HTTPS" ] || [ "${PROXY_SCHEME}" == "Https" ]; then
  export secure="true"
else
  export secure="false"
fi


sharedDir=${BITBUCKET_HOME}/shared
configFile=${sharedDir}/bitbucket.properties
# 写入反向代理配置
if [ -n "${PROXY_DOMAIN}" ]; then
  if [ ! -f "${configFile}" ]; then
    if [ ! -d "${sharedDir}" ]; then
      gosu "${USERNAME}" mkdir -p "${sharedDir}"
    fi

    gosu "${USERNAME}" touch "${configFile}"
  fi

  gosu "${USERNAME}" property set server.port 7990 "${configFile}"
  gosu "${USERNAME}" property set server.secure "${secure}" "${configFile}"
  gosu "${USERNAME}" property set server.scheme "${PROXY_SCHEME}" "${configFile}"
  gosu "${USERNAME}" property set server.proxy-name "${PROXY_DOMAIN}" "${configFile}"
  gosu "${USERNAME}" property set server.proxy-port "${PROXY_PORT}" "${configFile}"
fi

# 写入基础地址
if [ -n "${CONTEXT_PATH}" ]; then
  if [ ! -f "${configFile}" ]; then
    if [ ! -d "${sharedDir}" ]; then
      gosu "${USERNAME}" mkdir -p "${sharedDir}"
    fi

    gosu "${USERNAME}" touch "${configFile}"
  fi

  gosu "${USERNAME}" property set server.context-path "${CONTEXT_PATH}" "${configFile}"
fi


# 将主目录所有者改成系统创建的用户
permissionFile=${BITBUCKET_HOME}/.permission.lock
if [ "${SET_PERMISSIONS}" == true ] && [ ! -f "${permissionFile}" ]; then
  chown -R "${USERNAME}":"${USERNAME}" "${BITBUCKET_HOME}"

  if [ ! -f "${permissionFile}" ]; then
    gosu "${USERNAME}" touch "${permissionFile}"
  fi
fi
